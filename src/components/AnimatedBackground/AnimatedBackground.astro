---
import { nanoid } from "nanoid";
import animatedBackgroundImgUrl from "@/assets/animated-background.png";

const elemId = nanoid(8);
---

<div id={elemId} style={`background-image: url(${animatedBackgroundImgUrl});`}></div>

<script define:vars={{ elemId }}>
  const movementStrength = 23;

  const documenWidth = Math.max(
    document.documentElement["clientWidth"],
    document.body["scrollWidth"],
    document.documentElement["scrollWidth"],

    document.body["offsetWidth"],
    document.documentElement["offsetWidth"],
  );

  const documenHeight = Math.max(
    document.documentElement["clientHeight"],
    document.body["scrollHeight"],
    document.documentElement["scrollHeight"],
    document.body["offsetHeight"],
    document.documentElement["offsetHeight"],
  );

  const height = movementStrength / documenHeight;
  const width = movementStrength / documenWidth;

  document.addEventListener("DOMContentLoaded", () => {
    document.body.addEventListener(
      "mousemove",
      (e) => {
        const pageX = e.pageX - documenWidth / 2;
        const pageY = e.pageY - documenHeight / 2;
        const newvalueX = width * pageX * -1;
        const newvalueY = height * pageY * -1;
        const elements = document.getElementById(elemId);

        elements.style.backgroundPositionX = `calc( 50% + ${newvalueX}px )`;
        elements.style.backgroundPositionY = `calc( 50% + ${newvalueY}px )`;
      },
      { passive: true },
    );
  });
</script>

<style lang="scss">
  div {
    position: absolute;
    width: auto;
    height: auto;
    top: -28px;
    left: -28px;
    right: -28px;
    bottom: -28px;
    background-position: center center;
    background-size: cover;
    background-repeat: no-repeat;
    z-index: -1;

    @media only screen and (max-width: 1024px) {
      display: none;
    }
  }
</style>
